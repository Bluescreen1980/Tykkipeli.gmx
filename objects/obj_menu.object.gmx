<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tahtain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Start";
menu[1] = "Options";
menu[2] = "Quit";

space = 64;
menuIndex = 0;

image_xscale /= 5;
image_yscale /= 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
move -= max(keyboard_check_pressed(vk_up),
             keyboard_check_pressed(ord("W")), 0);
    // If the user moved up in menu
             
move += max(keyboard_check_pressed(vk_down),
             keyboard_check_pressed(ord("S")), 0);
             
    // If the user has moved down in menu
             
if (move != 0) {

    menuIndex += move;
    
    if (menuIndex &lt; 0) {
    
    // User has exceeded the first index, moving user to last index
        menuIndex = array_length_1d(menu) - 1;
    
    }
    
    if ( menuIndex &gt; array_length_1d(menu) - 1){
    
    // User has exceeded the last index, moving user to first index
        menuIndex = 0;
    
    }
    
}

var push;
push = max(keyboard_check_pressed(vk_enter), keyboard_check_pressed(vk_space));

if( push == 1 ) {
    script_execute(scr_mainMenu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);

draw_set_color(c_white);

var m;

for ( m = 0; m &lt; array_length_1d(menu); m++){

    // draw_text(x + space, y + (m * space), string(menu[m]));
    if(menuIndex == m){
        draw_set_color(c_black);
        draw_text_transformed(x + space, y + (m * space),
                                 string(menu[m]), 2, 2, 0);
        draw_set_color(c_white);
    } else {
        draw_text_transformed(x + space, y + (m * space),
                                 string(menu[m]), 2, 2, 0);
    }
}

draw_sprite(sprite_index, 0, x+16, y + menuIndex * space);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
